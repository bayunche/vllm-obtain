# VLLM 跨平台推理服务 - Linux 专用配置
# 优化 NVIDIA GPU (CUDA) / AMD GPU (ROCm) / CPU 性能

# =============================================================================
# 服务基础配置
# =============================================================================
HOST=0.0.0.0  # Linux通常绑定所有接口
PORT=8001
DEBUG=false
WORKERS=4  # Linux可以支持多worker

# =============================================================================
# 推理引擎配置 - Linux专用
# =============================================================================
INFERENCE_ENGINE=vllm  # Linux首选VLLM引擎
DEVICE_TYPE=cuda       # cuda, rocm, 或 cpu
DEFAULT_MODEL=qwen-0.5b
MAX_CONCURRENT_MODELS=2

# VLLM 特定配置
VLLM_TENSOR_PARALLEL_SIZE=1  # GPU并行数量
VLLM_PIPELINE_PARALLEL_SIZE=1
VLLM_MAX_NUM_SEQS=256       # 最大序列数
VLLM_MAX_NUM_BATCHED_TOKENS=8192

# CUDA 配置 (NVIDIA GPU)
CUDA_VISIBLE_DEVICES=0      # 使用的GPU ID
CUDA_MEMORY_FRACTION=0.9    # GPU内存使用比例

# ROCm 配置 (AMD GPU)
# ROCR_VISIBLE_DEVICES=0
# HIP_VISIBLE_DEVICES=0

# =============================================================================
# 模型和缓存配置
# =============================================================================
MODEL_DIR=/data/models      # Linux通常使用绝对路径
CACHE_DIR=/tmp/vllm_cache
ENABLE_CACHING=true
CACHE_SIZE=5000             # Linux通常有更大内存
CACHE_TTL=7200

# =============================================================================
# 并发和性能配置
# =============================================================================
MAX_CONCURRENT_REQUESTS=100  # Linux高并发能力
REQUEST_TIMEOUT=300
WORKER_CLASS=gevent
WORKER_CONNECTIONS=1000
KEEP_ALIVE=5
MAX_REQUESTS=10000
MAX_REQUESTS_JITTER=1000

# =============================================================================
# 内存管理
# =============================================================================
MEMORY_LIMIT=85  # Linux内存管理更灵活
ENABLE_SWAP_PROTECTION=false  # Linux swap管理较好
AUTO_CLEANUP_INTERVAL=1800

# =============================================================================
# 日志配置
# =============================================================================
LOG_LEVEL=INFO
LOG_DIR=/var/log/vllm       # Linux标准日志目录
ENABLE_LOG_FILE=true
LOG_RETENTION_DAYS=7        # 生产环境保留时间短
LOG_ROTATE_SIZE=500MB
ENABLE_SYSLOG=true

# =============================================================================
# 安全配置
# =============================================================================
ALLOWED_HOSTS=*
CORS_ORIGINS=http://localhost:3000,http://localhost:8080
API_KEY_REQUIRED=true       # Linux生产环境启用认证
API_KEY=your_secure_api_key_here

# =============================================================================
# 监控配置
# =============================================================================
ENABLE_METRICS=true
METRICS_INTERVAL=30         # Linux更频繁监控
METRICS_PORT=9090           # Prometheus metrics端口
HEALTH_CHECK_TIMEOUT=5

# =============================================================================
# Linux 特定优化
# =============================================================================
# 系统级优化
USE_HUGEPAGES=true
ENABLE_NUMA_AFFINITY=true
CPU_AFFINITY_MASK=0-15      # 绑定特定CPU核心

# 内存优化
USE_JEMALLOC=true           # 高性能内存分配器
MALLOC_ARENA_MAX=4
MALLOC_TRIM_THRESHOLD=131072

# 网络优化
TCP_KEEPALIVE=true
TCP_NODELAY=true
SO_REUSEPORT=true

# =============================================================================
# GPU特定配置
# =============================================================================
# NVIDIA GPU设置
NVIDIA_VISIBLE_DEVICES=all
NVIDIA_DRIVER_CAPABILITIES=compute,utility
CUDA_CACHE_PATH=/tmp/cuda_cache

# 显存优化
GPU_MEMORY_GROWTH=true
GPU_MEMORY_LIMIT=0.95

# =============================================================================
# 分布式配置 (可选)
# =============================================================================
# 多GPU配置
ENABLE_MULTI_GPU=false
NCCL_DEBUG=INFO
NCCL_P2P_DISABLE=0

# 多节点配置
MASTER_ADDR=localhost
MASTER_PORT=29500
WORLD_SIZE=1
RANK=0

# =============================================================================
# 容器化配置
# =============================================================================
# Docker/Kubernetes 配置
CONTAINER_MODE=false
K8S_POD_NAME=${HOSTNAME}
K8S_NAMESPACE=default

# =============================================================================
# 开发者配置
# =============================================================================
FLASK_ENV=production
PYTHONPATH=/app
TZ=UTC

# =============================================================================
# 系统资源限制
# =============================================================================
# 文件描述符限制
ULIMIT_NOFILE=65536
# 进程数限制  
ULIMIT_NPROC=32768
# 内存锁定限制
ULIMIT_MEMLOCK=unlimited

# =============================================================================
# 生产环境建议
# =============================================================================
# 高性能服务器 (32+ cores, 128GB+ RAM, A100/H100):
# WORKERS=8
# MAX_CONCURRENT_REQUESTS=500
# VLLM_MAX_NUM_SEQS=1024

# 中等服务器 (16 cores, 64GB RAM, RTX 4090):
# WORKERS=4  
# MAX_CONCURRENT_REQUESTS=200
# VLLM_MAX_NUM_SEQS=512

# 入门服务器 (8 cores, 32GB RAM, GTX 1080 Ti):
# WORKERS=2
# MAX_CONCURRENT_REQUESTS=50
# VLLM_MAX_NUM_SEQS=128